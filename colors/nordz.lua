local colors = {
  nord0 = '#2e3440', -- Polar Night / Darkest
  nord1 = '#3b4252', -- Polar Night / Darker
  nord2 = '#434c5e', -- Polar Night / Dark
  nord3 = '#4c566a', -- Polar Night / Light
  nord4 = '#d8dee9', -- Snow Storm / Lightest
  nord5 = '#e5e9f0', -- Snow Storm / Lighter
  nord6 = '#eceff4', -- Snow Storm / Light
  nord7 = '#f8f9fa', -- Snow Storm / Lightest (often used for bright fg)
  nord8 = '#8fbcbb', -- Frost / Cyan
  nord9 = '#81a1c1', -- Frost / Blue
  nord10 = '#5e81ac', -- Frost / Dark Blue
  nord11 = '#bf616a', -- Aurora / Red
  nord12 = '#d08770', -- Aurora / Orange
  nord13 = '#a3be8c', -- Aurora / Green
  nord14 = '#ebcb8b', -- Aurora / Yellow
  nord15 = '#b48ead', -- Aurora / Purple
}

local function setcolor()
  local groups = {
    -- Base groups
    Normal = { fg = colors.nord4, bg = colors.nord0 },
    NormalFloat = { fg = colors.nord4, bg = 'NONE' },
    FloatWin = { fg = colors.nord4, bg = colors.nord0 },
    FloatBorder = { fg = colors.nord2 },
    NormalNC = { link = 'Normal' },
    CursorLine = { bg = colors.nord1 },
    CursorColumn = { link = 'CursorLine' },
    CursorWord = { underline = true },
    TabLineTop = { fg = colors.nord3, bg = colors.nord3, bold = true },
    TabLineSel = { fg = colors.nord6, bg = colors.nord3, bold = true },
    TabLine = { fg = colors.nord4, bg = colors.nord3, bold = true },
    TabLineFill = { fg = 'NONE', bg = 'NONE' },
    MatchParen = { bg = colors.nord2, bold = true },
    ColorColumn = { bg = colors.nord1 },
    Conceal = { fg = colors.nord10 },
    --CursorLineNr = { fg = colors.nord14 },
    CursorLineNr = { fg = colors.white },
    NonText = { fg = colors.nord2 },
    SpecialKey = { fg = colors.nord4 },
    Visual = { bg = colors.nord2 },
    VisualNOS = { link = 'Visual' },
    Search = { fg = colors.nord14, bg = colors.nord0, reverse = true },
    IncSearch = { fg = colors.nord12, bg = colors.nord0, reverse = true },
    CurSearch = { link = 'IncSearch' },
    QuickFixLine = { fg = colors.nord0, bg = colors.nord14, bold = true },
    Underlined = { fg = colors.nord10, underline = true },
    StatusLine = { fg = colors.nord6, bg = colors.nord3 },
    StatusLineNC = { fg = colors.nord4, bg = colors.nord1 },
    WinBar = { fg = colors.nord4, bg = colors.nord0 },
    WinBarNC = { fg = colors.nord3, bg = colors.nord0 },
    WinSeparator = { fg = colors.nord2, bg = colors.nord0 },
    WildMenu = { fg = colors.nord10, bg = colors.nord1, bold = true },
    Directory = { fg = colors.nord9, bold = true },
    Title = { fg = colors.nord8, bold = true },
    ErrorMsg = { fg = colors.nord7, bg = colors.nord11, bold = true },
    MoreMsg = { fg = colors.nord14, bold = true },
    ModeMsg = { fg = colors.nord14, bold = true },
    Question = { fg = colors.nord12, bold = true },
    WarningMsg = { fg = colors.nord11, bold = true },
    LineNr = { fg = colors.nord3 },
    SignColumn = { bg = colors.nord0 },
    Folded = { fg = colors.nord2, bg = colors.nord1, italic = true },
    FoldColumn = { fg = colors.nord2, bg = colors.nord1 },
    Cursor = { reverse = true },
    vCursor = { link = 'Cursor' },
    iCursor = { link = 'Cursor' },
    lCursor = { link = 'Cursor' },
    Special = { fg = colors.nord12 },
    Comment = { fg = colors.nord3, italic = true },
    Error = { fg = colors.nord11, bold = true, reverse = true },
    Done = { fg = colors.nord12, bold = true, italic = true },
    Statement = { fg = colors.nord11 },
    Conditional = { fg = colors.nord11 },
    Repeat = { fg = colors.nord11 },
    Label = { fg = colors.nord11 },
    Exception = { fg = colors.nord11 },
    Operator = { fg = colors.nord12 },
    Keyword = { fg = colors.nord11 },
    Identifier = { fg = colors.nord9 },
    Function = { fg = colors.nord8, bold = true },
    PreProc = { fg = colors.nord13 },
    Include = { fg = colors.nord13 },
    Define = { fg = colors.nord13 },
    Macro = { fg = colors.nord13 },
    PreCondit = { fg = colors.nord13 },
    Constant = { fg = colors.nord15 },
    Character = { fg = colors.nord15 },
    String = { fg = colors.nord13, italic = true },
    Boolean = { fg = colors.nord15 },
    Number = { fg = colors.nord15 },
    Float = { fg = colors.nord15 },
    Type = { fg = colors.nord14 },
    StorageClass = { fg = colors.nord12 },
    Structure = { fg = colors.nord13 },
    Typedef = { fg = colors.nord14 },
    DiffDelete = { fg = colors.nord11, bg = colors.nord0, reverse = true },
    DiffAdd = { fg = colors.nord13, bg = colors.nord0, reverse = true },
    DiffChange = { fg = colors.nord8, bg = colors.nord0, reverse = true },
    DiffText = { fg = colors.nord14, bg = colors.nord0, reverse = true },
    SpellCap = { undercurl = true, sp = colors.nord10 },
    SpellBad = { undercurl = true, sp = colors.nord11 },
    SpellLocal = { undercurl = true, sp = colors.nord8 },
    SpellRare = { undercurl = true, sp = colors.nord15 },
    Whitespace = { fg = colors.nord2 },
    Delimiter = { fg = colors.nord12 },
    SnippetTabstop = { link = 'Normal' },
    -- LSP Diagnostic (using similar names as Gruvbox, adjust if needed based on LSP client)
    DiagnosticError = { fg = colors.nord11 },
    DiagnosticSignError = { fg = colors.nord11 },
    DiagnosticUnderlineError = { undercurl = true, sp = colors.nord11 },
    DiagnosticWarn = { fg = colors.nord14 },
    DiagnosticSignWarn = { fg = colors.nord14 },
    DiagnosticUnderlineWarn = { undercurl = true, sp = colors.nord14 },
    DiagnosticInfo = { fg = colors.nord9 },
    DiagnosticSignInfo = { fg = colors.nord9 },
    DiagnosticUnderlineInfo = { undercurl = true, sp = colors.nord9 },
    DiagnosticHint = { fg = colors.nord8 },
    DiagnosticSignHint = { fg = colors.nord8 },
    DiagnosticUnderlineHint = { undercurl = true, sp = colors.nord8 },
    DiagnosticFloatingError = { fg = colors.nord11 },
    DiagnosticFloatingWarn = { fg = colors.nord14 },
    DiagnosticFloatingInfo = { fg = colors.nord9 },
    DiagnosticFloatingHint = { fg = colors.nord8 },
    DiagnosticVirtualTextError = { fg = colors.nord11 },
    DiagnosticVirtualTextWarn = { fg = colors.nord14 },
    DiagnosticVirtualTextInfo = { fg = colors.nord9 },
    DiagnosticVirtualTextHint = { fg = colors.nord8 },
    LspReferenceRead = { fg = colors.nord14, bold = true },
    LspReferenceText = { fg = colors.nord14, bold = true },
    LspReferenceWrite = { fg = colors.nord12, bold = true },
    LspCodeLens = { fg = colors.nord3 },
    LspSignatureActiveParameter = { link = 'Search' },
    -- gitcommit (using similar names)
    gitcommitSelectedFile = { fg = colors.nord13 },
    gitcommitDiscardedFile = { fg = colors.nord11 },
    -- gitsigns.nvim (using similar names)
    GitSignsAdd = { fg = colors.nord13 },
    GitSignsChange = { fg = colors.nord15 },
    GitSignsDelete = { fg = colors.nord11 },
    GitSignsAddLn = { fg = colors.nord13 },
    GitSignsChangeLn = { fg = colors.nord15 },
    GitSignsDeleteLn = { fg = colors.nord11 },
    -- diff (using similar names)
    diffAdded = { fg = colors.nord13 },
    diffRemoved = { fg = colors.nord11 },
    diffChanged = { fg = colors.nord8 },
    diffFile = { fg = colors.nord12 },
    diffNewFile = { fg = colors.nord14 },
    diffOldFile = { fg = colors.nord12 },
    diffLine = { fg = colors.nord9 },
    diffIndexLine = { link = 'diffChanged' },
    -- lspsaga.nvim (using similar names)
    LspSagaCodeActionTitle = { link = 'Title' },
    LspSagaCodeActionBorder = { fg = colors.nord2 },
    LspSagaCodeActionContent = { fg = colors.nord13, bold = true },
    LspSagaLspFinderBorder = { fg = colors.nord2 },
    LspSagaAutoPreview = { fg = colors.nord12 },
    TargetWord = { fg = colors.nord9, bold = true },
    FinderSeparator = { fg = colors.nord8 },
    LspSagaDefPreviewBorder = { fg = colors.nord9 },
    LspSagaHoverBorder = { fg = colors.nord12 },
    LspSagaRenameBorder = { fg = colors.nord9 },
    LspSagaDiagnosticSource = { fg = colors.nord12 },
    LspSagaDiagnosticBorder = { fg = colors.nord15 },
    LspSagaDiagnosticHeader = { fg = colors.nord13 },
    LspSagaSignatureHelpBorder = { fg = colors.nord13 },
    SagaShadow = { fg = colors.nord0 },
    -- Indent
    IndentLine = { fg = colors.nord2 },
    IndentLineCurrent = { link = 'Comment' },
    -- StatusLine
    StatusLineMode = { fg = colors.nord4 },
    StatusLineFileInfo = { fg = colors.nord4 },
    StatusLineReadOnly = { fg = colors.nord11 },
    StatusLineBranch = { fg = colors.nord15 },
    StatusLineLsp = { fg = colors.nord4 },
    StatusLineFilesize = { fg = colors.nord4 },
    StatusLineEncoding = { fg = colors.nord4 },
    StatlsLineLnum = { fg = colors.nord4 },
    -- pmenu
    Pmenu = { fg = colors.nord6, bg = colors.nord1 },
    PmenuSel = { bg = colors.nord2 },
    PmenuSbar = { bg = colors.nord2 },
    PmenuThumb = { bg = colors.nord3 },
    PmenuKind = { fg = colors.nord15, bg = colors.nord1 },
    PmenuKindSel = { fg = colors.nord1, bg = colors.nord9, bold = true },
    PmenuExtra = { fg = colors.nord4, bg = colors.nord1 },
    PmenuExtraSel = { fg = colors.nord1, bg = colors.nord9, bold = true },
    -- cmp (using similar names)
    Cmp = { fg = colors.nord6 },
    CmpBorder = { fg = colors.nord8 },
    BlinkCmpMenu = { link = 'Cmp' },
    BlinkCmpMenuBorder = { link = 'CmpBorder' },
    BlinkCmpDoc = { link = 'Cmp' },
    BlinkCmpDocBorder = { link = 'CmpBorder' },
    BlinkCmpLabel = { link = 'Cmp' },
    BlinkCmpLabelMatch = { fg = colors.nord8, bold = true },
    BlinkCmpKind = { link = 'Cmp' },

    -- nvim-treesitter (mapping to Nord colors and using Nord-style group names where applicable)
    ['@comment'] = { link = 'Comment' },
    ['@comment.note'] = { fg = colors.nord7, bg = colors.nord9, bold = true, italic = true },
    ['@comment.todo'] = { fg = colors.nord7, bg = colors.nord14, bold = true, italic = true },
    ['@comment.error'] = { link = 'Error' },
    ['@none'] = { bg = 'NONE', fg = 'NONE' },
    ['@preproc'] = { fg = colors.nord13 },
    ['@define'] = { fg = colors.nord13 },
    ['@operator'] = { fg = colors.nord12 },
    ['@punctuation.delimiter'] = { fg = colors.nord12 },
    ['@punctuation.bracket'] = { fg = colors.nord12 },
    ['@punctuation.special'] = { fg = colors.nord12 },
    ['@string'] = { fg = colors.nord13, italic = true },
    ['@string.regex'] = { fg = colors.nord13 },
    ['@string.escape'] = { fg = colors.nord8 },
    ['@string.special'] = { fg = colors.nord8 },
    ['@character'] = { fg = colors.nord15 },
    ['@character.special'] = { fg = colors.nord8 },
    ['@boolean'] = { fg = colors.nord15 },
    ['@number'] = { fg = colors.nord15 },
    ['@float'] = { fg = colors.nord15 },
    ['@function'] = { fg = colors.nord8, bold = true },
    ['@function.builtin'] = { fg = colors.nord12 },
    ['@function.call'] = { fg = colors.nord8 },
    ['@function.macro'] = { fg = colors.nord13 },
    ['@method'] = { fg = colors.nord8 },
    ['@method.call'] = { fg = colors.nord8 },
    ['@constructor'] = { fg = colors.nord12 },
    ['@parameter'] = { fg = colors.nord9 },
    ['@keyword'] = { fg = colors.nord11 },
    ['@keyword.conditional'] = { fg = colors.nord11 },
    ['@keyword.debug'] = { fg = colors.nord11 },
    ['@keyword.directive'] = { fg = colors.nord13 },
    ['@keyword.directive.define'] = { fg = colors.nord13 },
    ['@keyword.exception'] = { fg = colors.nord11 },
    ['@keyword.function'] = { fg = colors.nord11 },
    ['@keyword.import'] = { fg = colors.nord13 },
    ['@keyword.operator'] = { fg = colors.nord11 },
    ['@keyword.repeat'] = { fg = colors.nord11 },
    ['@keyword.return'] = { fg = colors.nord11 },
    ['@keyword.storage'] = { fg = colors.nord12 },
    ['@conditional'] = { fg = colors.nord11 },
    ['@repeat'] = { fg = colors.nord11 },
    ['@debug'] = { fg = colors.nord11 },
    ['@label'] = { fg = colors.nord11 },
    ['@include'] = { fg = colors.nord13 },
    ['@exception'] = { fg = colors.nord11 },
    ['@type'] = { fg = colors.nord14 },
    ['@type.builtin'] = { fg = colors.nord14 },
    ['@type.definition'] = { fg = colors.nord14 },
    ['@type.qualifier'] = { fg = colors.nord14 },
    ['@storageclass'] = { fg = colors.nord12 },
    ['@attribute'] = { fg = colors.nord13 },
    ['@field'] = { fg = colors.nord9 },
    ['@property'] = { fg = colors.nord9 },
    ['@variable'] = { fg = colors.nord4 },
    ['@variable.builtin'] = { fg = colors.nord12 },
    ['@variable.member'] = { fg = colors.nord9 },
    ['@constant'] = { fg = colors.nord15 },
    ['@constant.builtin'] = { fg = colors.nord12 },
    ['@constant.macro'] = { fg = colors.nord13 },
    ['@namespace'] = { fg = colors.nord6 },
    ['@symbol'] = { fg = colors.nord9 },
    ['@text'] = { fg = colors.nord4 },
    ['@text.strong'] = { bold = true },
    ['@text.emphasis'] = { italic = true },
    ['@text.underline'] = { underline = true },
    ['@text.strike'] = { strikethrough = true },
    ['@text.title'] = { link = 'Title' },
    ['@text.literal'] = { link = 'String' },
    ['@text.uri'] = { link = 'Underlined' },
    ['@text.math'] = { link = 'Special' },
    ['@text.environment'] = { link = 'Macro' },
    ['@text.environment.name'] = { link = 'Type' },
    ['@text.reference'] = { link = 'Constant' },
    ['@text.note.comment'] = { fg = colors.nord11, bold = true },
    ['@text.warning'] = { link = 'WarningMsg' },
    ['@text.danger'] = { link = 'ErrorMsg' },
    ['@text.danger.comment'] = { fg = colors.nord7, bg = colors.nord11, bold = true },
    ['@text.diff.add'] = { link = 'diffAdded' },
    ['@text.diff.delete'] = { link = 'diffRemoved' },
    ['@tag'] = { fg = colors.nord11 }, -- Assuming a tag color, adjust if needed
    ['@tag.attribute'] = { fg = colors.nord9 },
    ['@tag.delimiter'] = { fg = colors.nord12 },
    ['@punctuation'] = { fg = colors.nord12 },
    ['@macro'] = { fg = colors.nord13 },
    ['@structure'] = { fg = colors.nord13 },
    ['@lsp.type.class'] = { link = '@constructor' },
    ['@lsp.type.comment'] = {}, -- do not overwrite comments
    ['@lsp.type.decorator'] = { link = '@parameter' },
    ['@lsp.type.enum'] = { link = '@type' },
    ['@lsp.type.enumMember'] = { link = '@constant' },
    ['@lsp.type.function'] = { link = '@function' },
    ['@lsp.type.interface'] = { link = '@keyword' },
    ['@lsp.type.macro'] = { link = '@macro' },
    ['@lsp.type.method'] = { link = '@method' },
    ['@lsp.type.namespace'] = { link = '@namespace' },
    ['@lsp.type.parameter'] = { link = '@parameter' },
    ['@lsp.type.property'] = { link = '@property' },
    ['@lsp.type.struct'] = { link = '@constructor' },
    ['@lsp.type.type'] = { link = '@type' },
    ['@lsp.type.typeParameter'] = { link = '@type.definition' },
    ['@lsp.type.variable'] = { link = '@variable' },
  }

  return groups
end

local groups = setcolor()

-- add highlights
for group, settings in pairs(groups) do
  vim.api.nvim_set_hl(0, group, settings)
end
